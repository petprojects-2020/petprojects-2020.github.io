{"version":3,"sources":["components/header/index.js","components/header/header.js","components/footer/index.js","components/footer/footer.js","actions/updating-city.js","components/city-card/city-card.js","components/city-card/index.js","actions/delete-city.js","components/default-cities/index.js","components/default-cities/default-cities.js","components/adding-new-city/adding-new-city.js","components/adding-new-city/index.js","actions/add-city.js","actions/data-downloading.js","components/city-in-detail/city-in-detail.js","components/city-in-detail/index.js","components/app/app.js","components/app/index.js","reducers/data-downloading.js","reducers/index.js","index.js","store.js"],"names":["Header","className","Footer","updateDataFailed","type","CityCard","handleUpdateBtn","city","axios","get","then","response","obj","Object","values","data","pop","props","onInitUpdate","catch","error","this","name","id","main","weather","description","temp","feels_like","onClick","history","push","deleteCity","href","Component","withRouter","connect","state","citiesItems","datadownloading","citiesList","dispatch","payload","actions","action","DefaultCities","isReady","today","Date","toLocaleDateString","map","AddingNewCity","cityName","handleEnteredData","e","enteredCityName","target","value","setState","handleAddBtn","arr","length","addCityFailed","addCity","onChange","placeholder","isError","setDataFailed","CityInDetail","displayData","arrHoursTemp","item","time","dt","getHours","temperature","inx","findIndex","currentDayData","i","find","coord","lat","lon","dataArr","console","log","currentCity","renderLineChart","ResponsiveContainer","width","height","LineChart","margin","top","right","left","bottom","Line","dataKey","stroke","CartesianGrid","strokeDasharray","XAxis","Label","position","style","textAnchor","YAxis","angle","Tooltip","to","wind","speed","humidity","App","defaultCitiesList","uploadingData","forEach","onInit","citiesListFromStorage","localStorage","getItem","arrLocalStorage","split","prevProps","prevState","updatedDefaultList","setItem","path","exact","render","match","params","initialState","combineReducers","currentId","currentIndex","filter","cityId","cityIndex","slice","store","createStore","reducer","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f996bca3.chunk.js","sourcesContent":["import Header from './header';\r\n\r\nexport default Header;","import React from 'react';\r\nimport './header.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"header__container row justify-content-center bg-secondary\r\n                            align-items-center border rounded\">\r\n            <div className=\"p-2 border rounded bg-white\">\r\n                <strong>WEATHER APP</strong>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import Footer from './footer';\r\n\r\nexport default Footer;","import React from 'react';\r\nimport './footer.css';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"footer__container row justify-content-start\r\n                            align-items-center bg-secondary border rounded text-white\">\r\n            <div className=\"p-4\">Copyright &copy; Weather APP 2021</div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","export const updateData = (city) => {\r\n    return {\r\n        type: \"UPDATE_DATA\",\r\n        payload: city\r\n    };\r\n};\r\n\r\nexport const updateDataFailed = () => {\r\n    return {\r\n        type: \"UPDATE_DATA_FAILED\"\r\n    };\r\n};\r\n\r\n","import React, { Component } from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../actions/updating-city';\r\nimport * as action from '../../actions/delete-city';\r\nimport axios from 'axios'; \r\n\r\nclass CityCard extends Component {\r\n\r\n    handleUpdateBtn = (city) => {\r\n        axios.get(`https://api.openweathermap.org/data/2.5/find?q=${city}&lang=ru&units=metric&appid=b5e209e1901bfaaab9cdbef5ec123106`)\r\n            .then(response => {\r\n                const data = Object.values(response.data);\r\n                const arr = data.pop();\r\n                const obj = arr[0];\r\n                this.props.onInitUpdate(obj);\r\n            })\r\n            .catch((error) => this.props.updateDataFailed);\r\n    }\r\n    \r\n    render() {\r\n        let {name, id, main, weather} = this.props;\r\n        return(\r\n            <div className=\"p-3 col-12 col-sm-6 col-lg-3 border border-secondary rounded\">\r\n                <div><strong>{name}</strong></div>\r\n                <div className=\"my-1\">{weather[0].description}</div>\r\n                <div className=\"my-2\">Температура(°C) <strong>{main.temp}&#176;</strong>,</div>\r\n                <div>чувствуется как {main.feels_like}</div>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                    <button onClick={()=> this.handleUpdateBtn(name)}\r\n                            className=\"btn btn-success my-3\">\r\n                            обновить данные</button>\r\n                    <button onClick={() => {this.props.history.push(`/cities/${id}`)}}\r\n                        className=\"btn btn-sm text-dark btn-outline-success\">погода детальнее</button>\r\n                    <button onClick={() => this.props.deleteCity(name)} \r\n                        href=\"#\" className=\"my-3 btn btn-sm btn-outline-danger\">удалить</button>    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    citiesItems: state.datadownloading.citiesList\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onInitUpdate: (city) => dispatch(actions.updateData(city)),\r\n    updateDataFailed: () => dispatch(actions.updateDataFailed),\r\n    deleteCity: (city) => dispatch(action.deleteCity(city))\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CityCard));\r\n\r\n","import CityCard from './city-card';\r\n\r\nexport default CityCard;","export const deleteCity = (city) => {\r\n    return {\r\n        type: \"DELETE_CITY\",\r\n        payload: city\r\n    };\r\n};","import DefaultCities from './default-cities';\r\n\r\nexport default DefaultCities;","import React from 'react';\r\nimport './default-cities.css';\r\nimport CityCard from '../city-card';\r\nimport { connect } from 'react-redux';\r\n\r\nconst DefaultCities = (props) => {\r\n    let {citiesItems, isReady} = props;\r\n    let today = new Date().toLocaleDateString(); \r\n    return(\r\n        <section className=\"defaultcities__container text-center my-5\">\r\n            <h2 className=\"my-4\">Прогноз погоды в городах ({today})</h2>\r\n            <div className=\"row\">\r\n                {!isReady ? \"Загрузка\" : citiesItems.map((city) =>\r\n                                <CityCard key={city.id} {...city} /> )} \r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    citiesItems: state.datadownloading.citiesList,\r\n    isReady: state.datadownloading.isReady\r\n});\r\n\r\nexport default connect(mapStateToProps)(DefaultCities);\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport './adding-new-city.css';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../actions/add-city';\r\nimport axios from 'axios';\r\n\r\nclass AddingNewCity extends Component {\r\n\r\n    state = {\r\n        cityName: '',\r\n        isReady: null\r\n    }\r\n\r\n    handleEnteredData = (e) => {\r\n        let enteredCityName = e.target.value;\r\n        this.setState({cityName: enteredCityName});\r\n    }\r\n\r\n    handleAddBtn = () => {\r\n        axios.get(`https://api.openweathermap.org/data/2.5/find?q=${this.state.cityName}&lang=ru&units=metric&appid=b5e209e1901bfaaab9cdbef5ec123106`)\r\n        .then(response => {\r\n        const data = Object.values(response.data);\r\n        const arr = data.pop();\r\n        if(arr.length === 0) {\r\n            this.props.addCityFailed();\r\n        } else {\r\n            const obj = arr[0];\r\n            this.props.addCity(obj);\r\n        }\r\n        })\r\n        .catch(() => this.props.addCityFailed());\r\n        this.setState({cityName: ''});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"row justify-content-center\">\r\n                <div className=\"my-5 py-2 px-4 col-12 col-md-9 col-lg-6 bg-light border border-secondary\r\n                                rounded addingcity__container text-center\">\r\n                    <h2 className=\"my-3\">Добавить город</h2>\r\n                    <div className=\"d-flex flex-column flex-sm-row justify-content-center\">\r\n                        <input onChange={(e) => this.handleEnteredData(e)} className=\"form-control w-75\" type=\"text\"\r\n                                value={this.state.cityName} placeholder=\"Введите название города\"/>\r\n                        <button onClick={this.handleAddBtn} \r\n                                className=\"btn btn-lg btn-danger ml-2\">Добавить</button>\r\n                    </div>\r\n                    <div className=\"my-4\">Примеры названий: Poltava, Milan, Sumy, Zhytomyr, Paris, London</div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    citiesItems: state.datadownloading.citiesList,\r\n    isError: state.datadownloading.error,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addCity: (city) => dispatch(actions.addCity(city)),\r\n    addCityFailed: (error) => dispatch(actions.addCityFailed(error))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddingNewCity);\r\n\r\n","import AddingNewCity from './adding-new-city';\r\n\r\nexport default AddingNewCity;","export const addCity = (obj) => {\r\n    return {\r\n        type: \"ADD_CITY\",\r\n        payload: obj\r\n    };\r\n};\r\n\r\nexport const addCityFailed = () => {\r\n    return {\r\n        type: \"ADD_CITY_FAILED\"\r\n    };\r\n};\r\n\r\n","export const setData = (arr) => {\r\n    return {\r\n        type: \"SET_DATA\",\r\n        payload: arr\r\n    };\r\n};\r\n\r\nexport const setDataFailed = () => {\r\n    return {\r\n        type: \"SET_DATA_FAILED\"\r\n    };\r\n};\r\n\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ResponsiveContainer, LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Label } from 'recharts';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios'; \r\n\r\nclass CityInDetail extends Component {\r\n\r\n    state = {\r\n        arr: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        let {id} = this.props;\r\n        let currentCity = this.props.citiesItems.find(item => item.id == id); \r\n        let {lat, lon} = currentCity.coord;\r\n        axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&lang=ru&exclude=minutely,daily,alerts&units=metric&appid=b5e209e1901bfaaab9cdbef5ec123106`)\r\n        .then(response => {\r\n            const data = Object.values(response.data);\r\n            const dataArr = data.pop();\r\n            this.displayData(dataArr);\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n\r\n    displayData = (arr) => {\r\n        let arrHoursTemp = [];\r\n        arr.map(item => {\r\n            let time = (new Date( item.dt * 1000 )).getHours();\r\n            let temperature = item.temp;\r\n            arrHoursTemp.push({time, temperature})\r\n        })\r\n        let inx = arrHoursTemp.findIndex(item => item.time === 0);\r\n        let currentDayData = [];\r\n        for(let i = 0; i <= inx; i++) {\r\n            currentDayData.push(arrHoursTemp[i])\r\n        }\r\n        this.setState({arr: currentDayData})\r\n    }\r\n\r\n    render() {\r\n        let {id} = this.props;\r\n        let currentCity = this.props.citiesItems.find(item => item.id == id);\r\n        const renderLineChart = (\r\n            <ResponsiveContainer width={\"100%\"} height={600}>\r\n                <LineChart data={this.state.arr} margin={{ top: 30, right: 30, left: 30, bottom: 30 }}>\r\n                    <Line type=\"monotone\" dataKey=\"temperature\" stroke=\"#8884d8\" />\r\n                    <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n                    <XAxis dataKey=\"time\">\r\n                        <Label\r\n                            value={\"Time\"}\r\n                            position=\"bottom\"\r\n                            style={{ textAnchor: \"middle\" }}\r\n                        />\r\n                    </XAxis>\r\n                    <YAxis>\r\n                        <Label\r\n                            value={\"Temperature (°C)\"}\r\n                            position=\"left\"\r\n                            angle={-90}\r\n                            style={{ textAnchor: \"middle\" }}\r\n                        />\r\n                    </YAxis>\r\n                    <Tooltip />\r\n                </LineChart>\r\n            </ResponsiveContainer>\r\n        );\r\n        let today = new Date().toLocaleDateString();         \r\n        return(\r\n            <div className=\"text-center\">\r\n                <div className=\"row my-4 align-items-center\"> \r\n                    <Link to=\"/\"><button className=\"btn btn-secondary\">на главную</button></Link>\r\n                    <span className=\"ml-2\">/ {currentCity.name}</span>\r\n                </div>\r\n                <h1 className=\"my-4\"> \r\n                    Прогноз погоды {currentCity.name} ({today}) - {currentCity.weather[0].description}\r\n                </h1>\r\n                <div className=\"row my-4 justify-content-center\">\r\n                    <div className=\"col-12 col-sm-6 col-md-4 border p-3 text-left rounded\">\r\n                        <div>Температура(°C) <strong>{currentCity.main.temp}&#176;</strong>,</div>\r\n                        <div>чувствуется как {currentCity.main.feels_like}</div>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 col-md-4 border p-3 text-left rounded\">\r\n                        <div>Ветер, м/cек - {currentCity.wind.speed}</div>\r\n                        <div>Влажность, % - {currentCity.main.humidity}</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center border rounded p-2\">\r\n                        <h2 className=\"my-2\">Почасовый прогноз погоды</h2>\r\n                        {renderLineChart}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    citiesItems: state.datadownloading.citiesList\r\n});\r\n\r\nexport default connect(mapStateToProps)(CityInDetail);\r\n\r\n","import CityInDetail from './city-in-detail';\r\n\r\nexport default CityInDetail;","import React, { Component, Fragment } from 'react';\nimport './app.css';\nimport Header from '../header';\nimport Footer from '../footer';\nimport DefaultCities from '../default-cities';\nimport AddingNewCity from '../adding-new-city';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions/data-downloading';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport CityInDetail from '../city-in-detail';\nimport axios from 'axios'; \n\n\nclass App extends Component {\n\n  state = {\n    defaultCitiesList: [\"Kharkiv\", \"Kyiv\", \"Dnipro\", \"Lviv\"]\n  }\n\n  uploadingData = (arr) => {\n    arr.forEach((city) => {\n      axios.get(`https://api.openweathermap.org/data/2.5/find?q=${city}&lang=ru&units=metric&appid=b5e209e1901bfaaab9cdbef5ec123106`)\n        .then(response => {\n            const data = Object.values(response.data);\n            const arr = data.pop();\n            const obj = arr[0];\n            this.props.onInit(obj);\n        })\n        .catch(() => (this.props.setDataFailed));\n    })\n  }\n\n  componentDidMount() {\n    let citiesListFromStorage = localStorage.getItem('citiesList');  \n    if(citiesListFromStorage) {\n      let arrLocalStorage = citiesListFromStorage.split(',');\n      this.uploadingData(arrLocalStorage);\n    } else {\n      this.uploadingData(this.state.defaultCitiesList);\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.citiesItems !== this.props.citiesItems) {\n      let updatedDefaultList = this.props.citiesItems.map(city => city.name);\n      localStorage.setItem('citiesList', updatedDefaultList);\n    }\n  }\n\n  render() {\n      return(\n        <div className=\"container\">\n          <BrowserRouter>\n            <Header />\n              <Switch>\n                <Route path=\"/\" exact render={() => \n                      <main>\n                          <DefaultCities />\n                          <AddingNewCity />\n                      </main>}\n                />\n                <Route path=\"/cities/:id\" \n                        render={({match})=> { \n                            const { id } = match.params;\n                            return <CityInDetail id={id}/>\n                        }}/>\n              </Switch>\n            <Footer />\n          </BrowserRouter>\n        </div>\n      );      \n  }\n}\n\nconst mapStateToProps = (state) => ({\n  citiesItems: state.datadownloading.citiesList\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onInit: (arr) => dispatch(actions.setData(arr)),\n    setDataFailed: () => dispatch(actions.setDataFailed)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import App from './app';\r\n\r\nexport default App;","const initialState = {\r\n    citiesList: [],\r\n    error: false,\r\n    isReady: false\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_DATA':\r\n            const currentId = action.payload.id;\r\n            const currentIndex = state.citiesList.findIndex(({id}) => id === currentId);\r\n            if(currentIndex === -1) {\r\n                return {\r\n                    ...state,\r\n                    citiesList: [...state.citiesList, action.payload],\r\n                    error: false,\r\n                    isReady: true\r\n                };\r\n            } else {\r\n                return state;\r\n            }\r\n\r\n        case 'ADD_CITY':\r\n            return {\r\n                ...state,\r\n                citiesList: [...state.citiesList, action.payload],\r\n                error: false\r\n            };\r\n        case 'DELETE_CITY':\r\n            return {\r\n                ...state,\r\n                citiesList: state.citiesList.filter(city => city.name !== action.payload),\r\n                error: false\r\n            };\r\n        case 'UPDATE_DATA':\r\n            const cityId = action.payload.id;\r\n            const cityIndex = state.citiesList.findIndex(({id}) => id === cityId);\r\n            return {\r\n                ...state,\r\n                citiesList: [\r\n                    ...state.citiesList.slice(0, cityIndex),\r\n                    action.payload,\r\n                    ...state.citiesList.slice(cityIndex + 1),\r\n                ],\r\n                error: false\r\n            };\r\n        case 'SET_DATA_FAILED':\r\n            return {\r\n                ...state,\r\n                error: true\r\n            };\r\n        case 'ADD_CITY_FAILED':\r\n            return {\r\n                ...state,\r\n                error: true\r\n            };\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport datadownloading from './data-downloading';\r\n\r\nexport default combineReducers({\r\n    datadownloading\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport { Provider } from 'react-redux';\nimport createStore from './store';\n\nconst store = createStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","import { createStore } from 'redux';\r\nimport reducer from './reducers';\r\n\r\nexport default () => {\r\n    const store = createStore(reducer);\r\n    return store;\r\n}"],"sourceRoot":""}